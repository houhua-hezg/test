<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="true"
    xmlns="http://www.springframework.org/schema/beans" 
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:jpa="http://www.springframework.org/schema/data/jpa"
    xsi:schemaLocation="  
       http://www.springframework.org/schema/beans   
       http://www.springframework.org/schema/beans/spring-beans-4.3.xsd  
       http://www.springframework.org/schema/mvc   
       http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd   
       http://www.springframework.org/schema/tx   
       http://www.springframework.org/schema/tx/spring-tx-4.3.xsd   
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
       http://www.springframework.org/schema/util 
       http://www.springframework.org/schema/util/spring-util-4.3.xsd
       http://www.springframework.org/schema/data/jpa 
       http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.3.xsd">
             
       <!-- 加载configs.properties文件
                此文件被加载到内存时会创建一个Properties对象,
                此对象会作为一个Bean存储到spring的IOC容器中,其key
                为cfg.
        -->
       <util:properties id="cfg" location="classpath:db.properties"/>
       <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
            init-method="init" destroy-method="close" lazy-init="false">
           <property name="DriverClassName" value="#{cfg.jdbcDriver}"/> 
           <property name="Url" value="#{cfg.jdbcUrl}"/> 
           <property name="Username" value="#{cfg.jdbcUser}"/> 
           <property name="Password" value="#{cfg.jdbcPassword}"/> 
       </bean>
       <bean id="sqlSessionFactory"
             class="org.mybatis.spring.SqlSessionFactoryBean">
             <property name="DataSource" ref="dataSource"/>
             <!-- 设置mapper文件的位置 -->
             <property name="MapperLocations"
              value="classpath*:mapper/sys/*Mapper.xml"/>
       </bean>
       <!-- 配置对指定DAO接口的扫描,由mybatis底层为DAO接口
              创建实现类,进而执行数据访问操作 -->
       <bean id="daoScanner" 
             class="org.mybatis.spring.mapper.MapperScannerConfigurer">
             <property name="BasePackage" value="com.db.**.dao"/>
             <!-- 当spring容器只有一个sqlSessionFactory时如下配置可以不写 -->
             <property name="SqlSessionFactoryBeanName" value="sqlSessionFactory"/>
       </bean>
</beans>





